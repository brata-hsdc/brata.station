# ------------------------------------------------------------------------------
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ------------------------------------------------------------------------------
"""
The one-and-only station configuration file. All station configuration belongs
in this config file, whether it's for the HMB, CPA, or CTS.

"""


# ------------------------------------------------------------------------------
class Config(object):
   pass


# ------------------------------------------------------------------------------
s = Config()


#---
# Enable one of the following for the connection. TODO Blah blah blah.
#---
#s.ConnectionModuleName = 'station.console' # TODO Unimplemented
s.ConnectionModuleName = 'station.connection'


#---
# Enable one of the following for the hardware. The console module simulates the
# hardware using console functions. This means the LEDs and vibration motor
# status will be printed to the logs instead of really lighting up or vibrating.
#---
s.HardwareModuleName = 'station.console'
#s.HardwareModuleName = 'station.hw'


#---
# Enable one of the following modules to select the station type. The module is
# expected to define a class named the value of StationClassName. This is the
# starting point for a station.
#---
s.StationType = 'station.types.hmb'
#s.StationType = 'station.types.cpa'
#s.StationType = 'station.types.cts'


s.ConnectionManagerClassName = 'ConnectionManager'
s.ConnectionManager = Config()
s.ConnectionManager.StationInstanceId = '01'
s.ConnectionManager.StationType = 'HMB'

s.ConnectionManager.ConnectUrl = 'http://localhost:8080/m/join';
s.ConnectionManager.DisconnectUrl = 'http://localhost:8080/m/leave';
s.ConnectionManager.TimeExpiredUrl = 'http://localhost:8080/m/time_expired';
s.ConnectionManager.SubmitUrl = 'http://localhost:8080/m/submit';

# TODO MS information
# //http://dc2014.hostreo.com/m/mgmt_main/login
# http://dc2014.comli.com/m/mgmt_main/login
# admin password is on the login page
# DeviceTesting/Test Contact


s.StationClassName = 'Station'
s.StationTypeConfig = Config()
s.StationTypeConfig.LedClassName = 'Led'
s.StationTypeConfig.VibrationMotorClassName = 'VibrationMotor'

# period = 1.0 sec
# want motor 1 to be on 1/5 of the time, off remainder
# want motor 2 to be on 1/7 of the time, off remainder
# want motor 3 to be on 1/11 of the time, off remainder
# (note the inverse of prime numbers)

s.StationTypeConfig.VibrationMotors = []

huey = Config()
huey.Name = 'Huey'
huey.OnDuration_s  = 1.0 / 5.0
huey.OffDuration_s = 4.0 / 5.0
huey.OutputPin = 'e'
s.StationTypeConfig.VibrationMotors.append(huey)

dewey = Config()
dewey.Name = 'Dewey'
dewey.OnDuration_s  = 1.0 / 7.0
dewey.OffDuration_s = 6.0 / 7.0
dewey.OutputPin = 'f'
s.StationTypeConfig.VibrationMotors.append(dewey)

louie = Config()
louie.Name = 'Louie'
louie.OnDuration_s  =  1.0 / 11.0
louie.OffDuration_s = 10.0 / 11.0
louie.OutputPin = 'g'
s.StationTypeConfig.VibrationMotors.append(louie)


s.StationTypeConfig.Leds = []

led = Config()
led.Name = 'red'
s.StationTypeConfig.Leds.append(led)

led = Config()
led.Name = 'yellow'
s.StationTypeConfig.Leds.append(led)

led = Config()
led.Name = 'green'
s.StationTypeConfig.Leds.append(led)

